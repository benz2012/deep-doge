{"version":3,"sources":["webpack:///./src/js/Components/Page.js","webpack:///./src/js/Components/Content.js","webpack:///./src/js/Components/DoggoImage.jsx","webpack:///./src/js/Components/Typography.js","webpack:///./src/js/Components/DoggoDisplay.jsx","webpack:///./src/js/Components/Button.js","webpack:///./src/js/Components/FloatingButton.jsx","webpack:///./src/js/Containers/HomePage.jsx","webpack:///./src/js/Components/ClassifierButtonWrapper.js","webpack:///./src/js/Components/ClassifierButton.jsx","webpack:///./src/js/Containers/ClassifyPage.jsx","webpack:///./src/js/Components/AppBar.jsx","webpack:///./src/js/Style/Body.js","webpack:///./src/js/Containers/App.jsx","webpack:///./src/js/index.jsx"],"names":["Page","styled","div","Container","Image","img","props","Boolean","src","DoggoImage","H1","h1","H2","h2","H3","Subtitle","p","Line","hr","DoggoDisplay","image","label","confidence","style","marginBottom","defaultProps","Button","button","color","outlined","FloatingButton","HomePage","useState","randDoggoImg","setRandDoggoImg","useEffect","fetch","then","response","json","data","message","Content","onClick","window","location","assign","href","ClassifierButtonWrapper","ButtonExtension","ClassifierButton","children","selected","rest","ClassifyPage","select","selectDog","event","target","innerText","reload","header","AppBar","styles","backgroundColor","fontFamily","App","Object","entries","bodyStyle","forEach","attr","document","body","routePath","pathname","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"app.27e7ebca.js","sourcesContent":["import styled from 'styled-components'\n\nconst Page = styled.div`\n  padding-top: 64px;\n  padding-bottom: 64px;\n  padding-left: inherit;\n  padding-right: inherit;\n`\n\nexport default Page\n","import styled from 'styled-components'\n\nconst Page = styled.div`\n  padding: 0 5vw;\n`\n\nexport default Page\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Container = styled.div`\n  width: 100%;\n  margin-top: 5vw;\n`\n\nconst Image = styled.img`\n  width: 90vw;\n  height: 90vw;\n  border-radius: 6px;\n\n  object-fit: cover;\n\n  visibility: ${props => (Boolean(props.src) !== false ? 'visible' : 'hidden')};\n`\n\nconst DoggoImage = ({ src }) => (\n  <Container>\n    <Image src={src} />\n  </Container>\n)\n\nexport default DoggoImage\n","import styled from 'styled-components'\n\nconst H1 = styled.h1`\n  font-size: 1.5em;\n`\n\nconst H2 = styled.h2`\n  font-family: \"Courier New\", monospace;\n`\n\nconst H3 = styled.h2`\n  font-weight: lighter;\n`\n\nconst Subtitle = styled.p`\n  color: rgb(100, 100, 100);\n  margin-top: 0px;\n`\n\nconst Line = styled.hr`\n  border-color: rgb(100, 100, 100);\n  margin: 0;\n`\n\n\nexport {\n  H1,\n  H2,\n  H3,\n  Subtitle,\n  Line,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport DoggoImage from './DoggoImage'\nimport { H3, Subtitle } from './Typography'\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n\nconst DoggoDisplay = ({ image, label, confidence }) => (\n  <Container>\n    <DoggoImage src={image} />\n    <H3 style={{ marginBottom: '0.3rem' }}>\n      This is a&nbsp;\n      {label !== '' ? label : '________'}\n    </H3>\n    {confidence !== null && (\n      <Subtitle>\n        {confidence}% Confidence\n      </Subtitle>\n    )}\n  </Container>\n)\n\nDoggoDisplay.defaultProps = {\n  image: '',\n  label: '',\n  confidence: null,\n}\n\nexport default DoggoDisplay\n","import styled from 'styled-components'\n\nconst Button = styled.button`\n  border: none;\n  color: inherit;\n\n  width: 100%;\n  border-radius: 6px;\n  margin-top: 5vw;\n  margin-bottom: 5vw;\n  padding: 4vw;\n\n  font-family: \"Courier New\", monospace;\n  font-size: 1.2rem;\n  background-color: ${props => props.color};\n\n  ${props => props.outlined && `\n    background-color: transparent;\n    color: ${props.color};\n    border: 1px solid ${props.color};\n  `}\n`\n\nexport default Button\n","import styled from 'styled-components'\n\nimport Button from './Button'\n\nconst FloatingButton = styled(Button)`\n  position: fixed;\n  bottom: 16px;\n\n  margin: 0 5vw;\n  width: 90vw;\n\n  box-shadow: 0px 3px 6px 1px rgba(0, 0, 0, 0.6);\n`\n\nexport default FloatingButton\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport Page from '../Components/Page'\nimport Content from '../Components/Content'\nimport DoggoDisplay from '../Components/DoggoDisplay'\nimport Button from '../Components/Button'\nimport FloatingButton from '../Components/FloatingButton'\nimport { H1, Line } from '../Components/Typography'\n\nconst HomePage = () => {\n  const [randDoggoImg, setRandDoggoImg] = useState('')\n  useEffect(() => {\n    fetch('https://dog.ceo/api/breeds/image/random')\n      .then(response => response.json())\n      .then((data) => {\n        setRandDoggoImg(data.message)\n      })\n  }, [])\n\n  return (\n    <Fragment>\n      <Page>\n        <Content>\n          <DoggoDisplay image={randDoggoImg} label=\"Fluffer\" confidence={96} />\n        </Content>\n\n        <Line />\n\n        <Content>\n          <Button\n            onClick={() => { window.location.assign('/classify') }}\n            color=\"rgb(255, 214, 0)\"\n            outlined\n          >\n            Help us Classify {'>'}\n          </Button>\n        </Content>\n\n        <Line />\n\n        <Content>\n          <H1>What&apos;s a Doggo?</H1>\n          <p>\n            <em>TL;DR a Doggo is a Dog</em>\n          </p>\n          <p>\n            DoggoLingo, also referred to as woof, bork and dog-speak, is an\n            internet language that is created from word conversion, meme\n            lexicon, and onomatopoeia. DoggoLingo is implied to be a dog&apos;s\n            own idiom, and is presented as what humans have long believed goes\n            on in the canine brain.&nbsp;\n            <a href=\"https://en.wikipedia.org/wiki/DoggoLingo\">Wikipedia</a>\n          </p>\n        </Content>\n      </Page>\n\n      <FloatingButton color=\"rgb(255, 0, 95)\">+ Add My Dog</FloatingButton>\n    </Fragment>\n  )\n}\n\nexport default HomePage\n","import styled from 'styled-components'\n\nconst ClassifierButtonWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n`\n\nexport default ClassifierButtonWrapper\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from './Button'\n\nconst ButtonExtension = styled(Button)`\n  width: 47%;\n  font-size: 1rem;\n  margin-bottom: 0;\n  padding: 3vw;\n`\n\nconst ClassifierButton = ({ children, selected, ...rest }) => (\n  <ButtonExtension color=\"rgb(255, 0, 95)\" outlined={!selected} {...rest}>\n    {children}\n  </ButtonExtension>\n)\n\nClassifierButton.defaultProps = {\n  children: 'Button Text',\n  selected: false,\n}\n\nexport default ClassifierButton\n","import React, { useState, useEffect } from 'react'\n\nimport Page from '../Components/Page'\nimport Content from '../Components/Content'\nimport DoggoDisplay from '../Components/DoggoDisplay'\nimport Button from '../Components/Button'\nimport ClassifierButtonWrapper from '../Components/ClassifierButtonWrapper'\nimport ClassifierButton from '../Components/ClassifierButton'\nimport { H1, Subtitle } from '../Components/Typography'\n\nconst ClassifyPage = () => {\n  const [randDoggoImg, setRandDoggoImg] = useState('')\n  useEffect(() => {\n    fetch('https://dog.ceo/api/breeds/image/random')\n      .then(response => response.json())\n      .then((data) => {\n        setRandDoggoImg(data.message)\n      })\n  }, [])\n\n  const [selected, select] = useState('')\n  const selectDog = event => select(event.target.innerText)\n\n  return (\n    <Page>\n      <Content>\n        <H1 style={{ marginBottom: '0.3rem' }}>\n          What doggo is this?\n        </H1>\n        <Subtitle style={{ marginBottom: 0 }}>\n          12,543 Unclassified Doggos\n        </Subtitle>\n        <DoggoDisplay image={randDoggoImg} />\n      </Content>\n\n      <Content>\n        <ClassifierButtonWrapper>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Doggo'}\n          >\n            Doggo\n          </ClassifierButton>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Woofer'}\n          >\n            Woofer\n          </ClassifierButton>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Fluffer'}\n          >\n            Fluffer\n          </ClassifierButton>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Scrapper'}\n          >\n            Scrapper\n          </ClassifierButton>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Yapper'}\n          >\n            Yapper\n          </ClassifierButton>\n          <ClassifierButton\n            onClick={selectDog}\n            selected={selected === 'Puggo'}\n          >\n            Puggo\n          </ClassifierButton>\n        </ClassifierButtonWrapper>\n      </Content>\n\n      <Content>\n        <Button color=\"rgb(255, 214, 0)\" outlined onClick={() => { window.location.reload() }}>Submit</Button>\n      </Content>\n    </Page>\n  )\n}\n\nexport default ClassifyPage\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { H2 } from './Typography'\n\nconst Container = styled.header`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 64px;\n\n  color: white;\n  background-color: rgb(255, 0, 95);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst AppBar = ({ children }) => (\n  <Container onClick={() => { window.location.assign('/') }}>\n    <H2>{children}</H2>\n  </Container>\n)\n\nexport default AppBar\n","const styles = {\n  color: 'white',\n  backgroundColor: 'rgb(40, 40, 40)',\n  fontFamily: 'Arial, sans-serif',\n}\n\n\nexport default styles\n","import React, { Fragment, useEffect } from 'react'\n\nimport HomePage from './HomePage'\nimport ClassifyPage from './ClassifyPage'\nimport AppBar from '../Components/AppBar'\n\nimport bodyStyle from '../Style/Body'\n\nconst componentForRoute = (path) => {\n  if (path === '/classify') {\n    return ClassifyPage\n  }\n  return HomePage\n}\n\nconst App = () => {\n  useEffect(() => {\n    Object.entries(bodyStyle).forEach(([attr, style]) => {\n      document.body.style[attr] = style\n    })\n  }, [])\n\n  const routePath = window.location.pathname\n  const Component = componentForRoute(routePath)\n\n  return (\n    <Fragment>\n      <AppBar>Doggo Classifier</AppBar>\n      <Component />\n    </Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './Containers/App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('app')\n)\n"],"sourceRoot":""}